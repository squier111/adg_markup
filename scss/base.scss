@use "sass:map";
@use './variables' as vars;
@use './mixins'  as mixins;

// input styles
input[type="text"], input[type="number"] {
	width: 100%;
	height: vars.$input-height;
	border-radius: vars.$input-border-radius;
	color: map.get(vars.$colors, primary);
	font-size: 14px;
	line-height: 45px;
	display: block;
	text-overflow: ellipsis;
	white-space: nowrap;
	background: #fff;
	border: 1px map.get(vars.$colors, borderColor) solid;
	padding: 0 40px 0 16px;
	box-sizing: border-box;
}

textarea {
	width: 100%;
	resize: none;
	height: 137px;
	color: #000;
	font-size: 15px;
	line-height: 17px;
	background: #fff;
	border: 1px map.get(vars.$colors, borderColor) solid;
	padding: 12px;
	box-sizing: border-box;
	margin: 0 0 21px;
}
input[type="text"].error {
	border-color: #f3292e;
}
input:focus,
input:hover,
textarea:focus,
textarea:hover {
	border-color: #000;
}
input[type='text']::-webkit-input-placeholder {
	font: 15px/45px vars.$base-font, sans-serif;
	color: map.get(vars.$colors, placeholder);
	display: block;
	text-overflow: ellipsis;
	white-space: nowrap;
	opacity:0.9;
	font-style:normal;
}
input[type='text']::-moz-placeholder{
	font: 15px/42px vars.$base-font, sans-serif;
	color: map.get(vars.$colors, placeholder);
	opacity:0.9;
	display: block;
	text-overflow: ellipsis;
	white-space: nowrap;
	font-style:normal;
}
input[type='text']:-moz-placeholder {
	font: 15px/45px vars.$base-font, sans-serif;
	color: map.get(vars.$colors, placeholder);
	opacity:0.9;
	font-style:normal;
	display: block;
	text-overflow: ellipsis;
	white-space: nowrap;
}
input[type='text']:-ms-input-placeholder {
	font: 15px/45px vars.$base-font, sans-serif;
	color: map.get(vars.$colors, placeholder);
	opacity:0.9;
	font-style:normal;
	display: block;
	text-overflow: ellipsis;
	white-space: nowrap;
}
input[type="submit"] {
	@include mixins.transition(all, vars.$transition-time, ease-in-out);
	cursor: pointer;
	height: vars.$input-height;
	min-width: 185px;
	color: #fff;
	background: map.get(vars.$colors, secondary);
	font: 14px/38px vars.$base-font, sans-serif;
	border: none;
	padding: 0 27px 0 27px;
	border-radius: 16px !important;
	box-sizing: border-box;
}
input[type="submit"]:hover {
	opacity: 0.7;
}

// end input styles


.ui-visual-focvs,
.ui-visual-focus,
.ui-state-focus {
	background: none !important;
}

.ui-datepicker {
	border: 1px map.get(vars.$colors, borderColor) solid !important;
}

.open-menu i {
	font-size: 20px;
}

#wrapper {
	overflow: hidden;
	width: 100%;
	min-height: 100%;
	position: relative;
}

.center {
	padding: 0 20px;
	position: relative;
	max-width: 100%;
	min-width: 290px;
}
.center:after {
	content: '';
	display: block;
	clear: both;
}
.scroll-holder {
	overflow-y: auto;
	-webkit-overflow-scrolling: touch;
	position: absolute;
	left: 0;
	top: 193px;
	bottom: 0;
	right: 0;
	-webkit-box-sizing: border-box;
	-moz-box-sizing: border-box;
	box-sizing: border-box;
	padding: 0 0 0 20px;
}

.scroll-holder::-webkit-scrollbar {
	width: 3px;
}
.scroll-holder::-webkit-scrollbar-track {
	background-color: #fff;
}
.scroll-holder::-webkit-scrollbar-thumb {
	background-color: map.get(vars.$colors, bgColor);
	outline: 1px solid map.get(vars.$colors, bgColor);
}

.scroll-holder .nav {
	flex: 1 1 auto;
}

// menu-styles

.menu-holder {
    @include mixins.transition(all, vars.$transition-time, linear);

    .ui-selectmenu-button.ui-button {
      height: 40px;
    }

    span.ui-selectmenu-text {
      font-size: 15px !important;
      line-height: 38px !important;
      width: 100%;
      display: block;
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
    }

    input[type="text"] {
      height: 40px;
      border: none;
      background: map.get(vars.$colors, bgSecondaryColor);
      padding: 0 16px 0 40px;
    }

    .form-row {
      margin: 0 0 17px;

      .input-holder {
        i {
          right: inherit;
          left: 18px;
        }
      }
    }

    &.open {
      width: 70px;
      padding: 20px 5px;
      overflow: hidden;

      .log-out-container {
        padding: auto;
        padding: 10px 15px 10px 15px;
      }

      input[type="text"] {
        padding: 0 5px;

        &::placeholder {
          color: transparent;
        }
      }

      .form-row {
        .input-holder {
          i {
            left: 15px;
          }
        }
      }

      .ui-selectmenu-button.ui-button {
        padding: 0 5px;
      }

      .ui-widget-content .ui-state-active {
        background: none;
      }

      .ui-selectmenu-icon.ui-icon {
        display: none;
      }

      .scroll-holder {
        padding: 0 0 0 15px;
      }

      .logo {
        @include mixins.transition(all, vars.$transition-time, linear);

        &::before {
          content: 'ADG';
        }
      }

      .share {
        display: none;
      }
    }
}

.log-out-container a {
	display: flex;
	align-items: center;
	text-decoration: none;
}

.log-out-container a i {
	background: map.get(vars.$colors, bgSecondaryColor);;
	color: map.get(vars.$colors, primary);
	display: flex;
	margin: 0 15px 0 0;
	width: 40px;
	height: 40px;
	justify-content: center;
	align-items: center;
	border-radius: 12px;
	flex: 0 0 auto;
}


#main {
    @include mixins.transition(padding, vars.$transition-time, ease-in-out);
}

#main.open {
	padding: 0 0 0 70px;
}

.logo {
	font-family: "Inter", sans-serif;
	display: block;
	color: map.get(vars.$colors, danger);
	font-weight: 900;
	padding: 15px 5px;
	font-size: 20px;
	bottom: 0;
	background: #ffffff;
	white-space: nowrap;
  z-index: 10;
}

.logo:before {
	content: 'American Data Group';
}

.logo.active:before {
	content: 'ADG';
	width: 55px;
}

.menu-holder {
	border-right: 1px map.get(vars.$colors, borderColor) solid;
	position: fixed;
	top: 0;
	background: #fff;
	width: 285px;
	padding: 20px 15px 0 15px;
	left: 0;
	height: 100%;
	z-index: 500;
	overflow: hidden;
	box-sizing: border-box;
}

.menu-top {
	border-bottom: 1px map.get(vars.$colors, borderColor) solid;
	padding: 0 14px 19px 19px;
}

.nav-controls {
	border-bottom: 1px map.get(vars.$colors, borderColor) solid;
	padding: 10px 7px 10px 7px;
}

.nav-controls label:last-child {
	margin-bottom: 0;
}

#main {
	display: block;
	padding: 0 0 0 285px;
}
.nav-menu {
	margin: 0 0 100px;
	padding: 0;
	list-style: none;
}
.nav-menu li {
	margin: 0 0 14px;
}
.nav-menu a {
	display: flex;
	align-items: center;
    @include mixins.transition(all, vars.$transition-time, linear);
	text-decoration: none;
}

.nav-menu li .icon {
	vertical-align: bottom;
	min-width: 21px;
}
.nav-menu li i {
	background: map.get(vars.$colors, bgSecondaryColor);
	color: map.get(vars.$colors, primary);
	display: flex;
	margin: 0 15px 0 0;
	width: 40px;
	height: 40px;
	justify-content: center;
	align-items: center;
	border-radius: 12px;
	flex: 0 0 auto;
	font-size: 14px;
	line-height: 20px;
	font-weight: 700;
	font-style: normal;
}

.nav-menu li span {
	white-space: nowrap;
	display: block;
	text-overflow: ellipsis;
	overflow: hidden;
	padding: 0 5px 0 0;
}

.ui-widget.ui-widget-content {
	border: none;
}

.ui-menu .ui-menu-item-wrapper {
	padding: 0;
	border: none!important;
	border-bottom-left-radius: 15px;
	border-top-left-radius: 15px;
	transition: none;
}

.ui-widget-content .ui-state-active i {
	background: map.get(vars.$colors, secondary);
	color: #fff;
}

.ui-widget-content .ui-state-active {
	color: #fff;
	position: relative;
	margin: 0;
}

.ui-menu .ui-menu {
	display: none !important;
	position: static !important;
	padding: 10px 0 0 55px !important;
}

.ui-menu .ui-menu-item.has-submenu.active .ui-menu {
	display: block!important;
}

.ui-menu .ui-menu-item.active > a,
.ui-menu .ui-menu-item.active a i {
	background: map.get(vars.$colors, secondary);
	color: #fff;
}

.menu-holder.open .ui-menu .ui-menu-item.active > a {
	background: none;
}

.ui-menu-item.has-submenu.active a:before {
	border-color: #fff;
	transform: rotate(-135deg) translate(-50%, -50%);
	margin: -9px 0 0 0;
}

.ui-menu .ui-menu li:hover a {
	background: none;
	color: map.get(vars.$colors, secondary);
}

.ui-menu .ui-menu .ui-menu-item-wrapper {
	text-overflow: ellipsis;
	white-space: nowrap;
	overflow: hidden;
	display: block;
	padding: 0 30px 0 0;
}

.ui-menu-item.has-submenu area {
	position: relative;
}

.ui-menu-item.has-submenu a:before {
	content: '';
	position: absolute;
	top: 50%;
	right: 19px;
	width: 8px;
	height: 8px;
	margin: 0;
	border-style: solid;
	border-width: 0 2px 2px 0;
	border-color: map.get(vars.$colors, secondary);
	transform: rotate(45deg) translate(-50%, -50%);
	transform-origin: center;
}

.ui-menu-item.nested-active a {
	color: map.get(vars.$colors, secondary);
	position: relative;
}

.ui-menu-item.has-submenu.active  .ui-menu-item.nested-active a:before {
	content: '';
	position: absolute;
	width: 8px;
	height: 2px;
	background-color: map.get(vars.$colors, secondary);
	transform: rotate(-132deg);
	top: 16px;
	right: 19px;
}

.ui-menu-item.has-submenu.active  .ui-menu-item.nested-active a:after {
	content: '';
	position: absolute;
	width: 10px;
	height: 2px;
	background-color: map.get(vars.$colors, secondary);
	transform: rotate(-48deg);
	top: 7px;
	right: 13px;
}

.ui-menu-item.has-submenu a.ui-state-active:before {
	border-color: #fff;
}

.menu-holder.open .ui-menu-item.has-submenu a:before {
	display: none;
}

.ui-selectmenu-menu .ui-widget.ui-widget-content  .ui-state-active {
	background: none;
	color: map.get(vars.$colors, bgColor);
	opacity: 0.7;
}

.bottom-nav-holder {
	border-top: 1px map.get(vars.$colors, borderColor) solid;
	position: absolute;
	padding: 0 10px;
	justify-content: space-between;
	align-items: center;
	display: flex;
	background: #fff;
	bottom: 0;
	left: 0;
	right: 0;
}

.log-out-container {
	position: absolute;
	padding: 10px 20px 10px 20px;
	justify-content: space-between;
	align-items: center;
	display: flex;
	background: #fff;
	bottom: 52px;
	left: 0;
	right: 0;
}

.breadcrumps {
	display: flex;
}

.breadcrumps li {
	position: relative;
	font-size: 16px;
	line-height: 19px;
	margin: 0 20px 0 0;
	padding: 0 12px 0 0;

	&:before {
		content: '';
		position: absolute;
		top: 12px;
		right: 0;
		width: 8px;
		height: 8px;
		border-style: solid;
		border-width: 0 2px 2px 0;
		border-color: map.get(vars.$colors, secondary);
		transform: rotate(45deg) translate(-50%, -50%);
		transform-origin: center;
		transform: rotate(-45deg);
	}

	&:last-child:before,
	:last-child:after {
		display: none;
	}

	a {
        @include mixins.transition(all, vars.$transition-time, ease-in-out);
		text-decoration: none;
		color: map.get(vars.$colors, bgColor);
		padding: 7px 14px;
		display: block;
		border-radius: 8px;
		font-weight: 700;

		&:hover {
			opacity: 0.7;
		}
	}

	&.active a {
		background: rgba(161, 167, 175, 0.16);
		font-weight: 700;
		color: map.get(vars.$colors, primary);
	}
}

#header {
	padding: 13px 20px;
    margin: 0 0 20px;
	border: 1px map.get(vars.$colors, borderColor) solid;
	display: flex;
	justify-content: space-between;
	align-items: center;
}

.right-menu {
	display: flex;
	justify-content: center;
	align-items: center;
	column-gap: 2px;
}

.right-menu li {
	position: relative;
}

.right-menu li a {
	background: #fff;
	color: map.get(vars.$colors, primary);
	display: flex;
	margin: 0 10px 0 0;
	font-size: 15px;
	width: 40px;
	height: 40px;
	justify-content: center;
	align-items: center;
	border-radius: 12px;

}

.right-menu li .counter {
	position: absolute;
	top: -1px;
	right: 7px;
	border-radius: 50%;
	color: #fff;
	background: map.get(vars.$colors, danger);
	width: 16px;
	text-align: center;
	line-height: 16px;
	height: 16px;
	font-size: 12px;
}

.info-block {
	padding: 20px 0;
}

.container {
	background: #fff;
	border: 1px map.get(vars.$colors, borderColor) solid;
	border-radius: 20px;
	padding: 10px 15px;
	margin-bottom: 20px;
}

.form-row {
	position: relative;
	font-size: 0;
	display: block;
	line-height: 0;
	margin: 0 0 24px;
}

.form-row.two-items {
	display: flex;
	column-gap: 20px;
	width: 100%;
	padding: 6px 0 0 0;
}

.two-items {
	display: flex;
	column-gap: 20px;
	width: 100%;
	padding: 6px 0 0 0;
}

.two-items > * {
	flex: 1 1 50%;
	width: 50%;
	padding: 0;
}

.form-row span {
	display: block;
	font-size: 12px;
	line-height: 14px;
	color: map.get(vars.$colors, bgColor);
	margin: 0 0 10px;
}

form .two-columns {
	font-size: 0;
	line-height: 0;
	display: flex;
	column-gap: 37px;
}
form .two-columns .col {
	flex: 1 1 auto;
	width: 50%;
	padding: 0;
}

.form-row .input-holder {
	position: relative;
}

.form-row .input-holder i {
	font-size: 16px;
	line-height: 16px;
	position: absolute;
	bottom: 50%;
	right: 18px;
	margin: 0 0 -8px 0;
}

.ui-selectmenu-button {
	width: 200px;
	background: #f0f8ff;
	border: 1px solid #00aaff;
	border-radius: 5px;
	font-family: Arial, sans-serif;
	font-size: 14px;
	color: #333;
}

.ui-selectmenu-menu {
	border: 1px solid #00aaff;
}

.info-block {
	padding: 22px 0 13px;
}

.submit-holder {
	padding: 15px 0 0 0;
	display: flex;
	justify-content: flex-end;
	align-items: center;
}

.ui-selectmenu-button.ui-button {
	width: 100%;
	height: vars.$input-height;
	border-radius: vars.$input-border-radius;
	color: map.get(vars.$colors, bgColor);
	font-size: 15px;
	line-height: 45px;
	display: block;
	text-overflow: ellipsis;
	white-space: nowrap;
	background: #fff;
	border: 1px map.get(vars.$colors, borderColor) solid;
	padding: 0 40px 0 16px;
	box-sizing: border-box;
}

.ui-selectmenu-button.ui-selectmenu-button-open {
	border-bottom-left-radius: 0;
	border-bottom-right-radius: 0;
}

span.ui-selectmenu-text {
	font-size: 15px !important;
	line-height: 45px  !important;
}

.ui-selectmenu-icon.ui-icon {
	content: '';
	position: absolute;
	top: 50%;
	right: 19px;
	width: 10px;
	height: 10px;
	border-style: solid;
	border-width: 0 2px 2px 0;
	border-color: map.get(vars.$colors, bgColor);
	transform: rotate(45deg) translate(-50%, -50%);
	transform-origin: center;
}

.ui-selectmenu-menu {
	border: none;
	margin: 0;
	padding: 0;
	box-sizing: border-box;
	border-top: none;
	z-index: 500;
}

.ui-selectmenu-menu .ui-widget.ui-widget-content {
	padding: 5px 10px;
}

.ui-menu .ui-menu-item {
	margin: 0 0 15px;
}

.ui-menu .ui-menu .ui-menu-item a {
	background: none;
}

.ui-widget.ui-widget-content {
	padding: 5px 0;
	color: map.get(vars.$colors, bgColor);
	font-size: 15px;
	line-height: 20px;
}

.ui-selectmenu-menu .ui-widget.ui-widget-content {
	border: 1px solid #c5c5c5;
	border-top: none;
}

.checkbox-container,
.radio-container {
	background: map.get(vars.$colors, bgSecondaryColor);;
	padding: 7px 2px 7px 2px;
	border-radius: vars.$input-border-radius;
	margin: 0 0 23px;
}

.radio-container {
	display: flex;
	align-items: center;
	column-gap: 20px;
}

.form-bottom .radio-container {
	margin-top: 28px;
}

.checkbox-container label:last-child {
	margin: 0;
}

.ui-checkboxradio-label {
	display: flex;
	text-align: start;
	color: map.get(vars.$colors, primary);
	font-size: 14px;
	margin: 0 0 12px;
	align-items: center;
	line-height: 16px;
	border: none;
	box-shadow: none !important;
}

.ui-checkboxradio-label .ui-checkboxradio-icon {
	width: 24px;
	height: 24px;
	border: 1px map.get(vars.$colors, borderColor) solid;
	border-radius: 8px;
	background: #fff;
	box-shadow: none;
	margin: 0 10px 0 0;
}

.ui-checkboxradio-radio-label .ui-icon-background {
	width: 24px;
	height: 24px;
	border: 1px map.get(vars.$colors, borderColor) solid;
	border-radius: 1em;
	overflow: visible;
}

.ui-checkboxradio-checked.ui-state-active,
.ui-checkboxradio-label.ui-button:hover {
	background: none!important;
	border: none!important;
	box-shadow: none!important;
	color: #00091F!important;
}

.ui-checkboxradio-label.ui-checkboxradio-checked .ui-checkboxradio-icon {
	background: #0fa21e;
	position: relative;
}


.ui-checkboxradio-label.ui-checkboxradio-checked .ui-checkboxradio-icon::before {
	content: '';
	position: absolute;
	width: 8px;
	height: 2px;
	background-color: #fff;
	transform: rotate(-127deg);
	top: 50%;
	left: 14%;
}

.ui-checkboxradio-label.ui-checkboxradio-checked .ui-checkboxradio-icon::after {
	content: '';
	position: absolute;
	width: 14px;
	height: 2px;
	background-color: #fff;
	transform: rotate(-56deg);
	top: 43%;
	left: 29%;
}

.ui-checkboxradio-radio-label.ui-checkboxradio-checked .ui-icon,
.ui-checkboxradio-radio-label.ui-checkboxradio-checked:hover .ui-icon {
	width: 24px;
	height: 24px;
	border: 3px #0fa21e solid;
	border-radius: 1em;
	overflow: visible;
	background: none;
}

.ui-checkboxradio-radio-label {
	margin: 0;
}

.ui-checkboxradio-radio-label.ui-checkboxradio-checked .ui-checkboxradio-icon::after {
	content: '';
	position: absolute;
	top: 50%;
	left: 50%;
	width: 10px;
	margin: -5px 0 0px -5px;
	height: 10px;
	background: #0fa21e;
	border-radius: 50%;
}

.ui-selectmenu-button.ui-button.ui-selectmenu-disabled {
	opacity: 1;
	background: map.get(vars.$colors, bgSecondaryColor);;
}

.form-bottom {
	border-top: 1px map.get(vars.$colors, borderColor) solid;
	padding: 24px 0 0;
}

.form-bottom .form-row {
	margin: 0;
}

// datepicker styles

.ui-datepicker-prev:hover,
.ui-datepicker-next:hover {
    background: none;
    color: map.get(vars.$colors, primary);
    border-color: map.get(vars.$colors, primary);
}

// end datepicker styles

.more-btn {
	background: map.get(vars.$colors, white);
	border: 1px map.get(vars.$colors, borderColor) solid;
	color: map.get(vars.$colors, primary);
	display: flex;
	margin: 0;
	width: 36px;
	height: 36px;
	justify-content: center;
	align-items: center;
	border-radius: 12px;
	flex: 0 0 auto;
	font-size: 14px;
	line-height: 20px;
	font-weight: 700;
	font-style: normal;
	@include mixins.transition(all, vars.$transition-time, ease-in-out);
	cursor: pointer;

	&:active, &:hover {
		 background: map.get(vars.$colors, secondary);
		 color: map.get(vars.$colors, white);
		 border-color: map.get(vars.$colors, white);
	}
}

.purchase-order-info-list {
	display: flex;
	column-gap: 36px;
	row-gap: 20px;
	flex-wrap: wrap;

	li {
		.title {
			font-size: 12px;
			font-weight: 600;
			color: map.get(vars.$colors, titleColor);
			display: block;
			margin-bottom: 5px;
		}
		.info {
			font-size: 14px;
			color: map.get(vars.$colors, textColor);
		}
	}
}


.purchase-order-holder {
	display: flex;
	justify-content: space-between;
	align-items: center;
}

// accordion styles
.ui-accordion {
    position: relative;
    .ui-accordion-header {
        padding: 10px 10px 10px 50px;
        margin: 0 0 15px;
		  column-gap: 10px;
        display: flex;
        align-items: center;
        justify-content: space-between;
        border-radius: vars.$input-border-radius !important;
        border-color: map.get(vars.$colors, borderColor);
    }

    .ui-accordion-content {
        margin: 0 0 15px;
        overflow: inherit;
        height: auto !important;
        padding: 10px 0 0 0;
        border: none;
    }

    .ui-accordion-header-active {
        margin: 0;
        border-radius: vars.$input-border-radius !important;
        .ui-accordion-header-icon {
            margin: -4px 0 0 0;
            transform: rotate(-135deg);
        }
    }

    .ui-accordion-header-active,
    .ui-state-hover {
        background-color: map.get(vars.$colors, softSecondary);
        border-color: map.get(vars.$colors, borderColor);
    }

    .ui-accordion-header-icon {
        @include mixins.transition(all, vars.$transition-time, linear);
        position: absolute;
        top: 50%;
		  left: 23px;
        margin: 0;
        background: none;
        width: 8px;
        height: 8px;
        border-style: solid;
        border-width: 0 2px 2px 0;
        border-color: map.get(vars.$colors, secondary);
        transform: rotate(45deg) translate(-50%, -50%);
        transform-origin: center;
    }

    .right-holder {
        display: flex;
        align-items: center;
        column-gap: 30px;
    }

}

.price-amount-list {
    display: flex;
	 flex-wrap: wrap;
    align-items: center;
    column-gap: 38px;
	 row-gap: 10px;
    color: map.get(vars.$colors, textColor);

    .price {
        font-weight: 600;
    }
}
.price-list {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 10px;

    .price-box {
        overflow: hidden;
        border: 1px map.get(vars.$colors, borderColor) solid;
        border-radius: vars.$input-border-radius;
        &:nth-last-child(2),
        &:last-child {
        grid-column: 3;
        }
    }

    .price-header {
        background: map.get(vars.$colors, bgSecondaryColor);
        padding: 10px;
        font-weight: 600;
        font-size: 12px;
        line-height: 16px;
    }
}

dl {
	display: grid;
	grid-template-columns: 1fr 2fr;
	gap: 13px;
	padding: 10px;

    dt {
      font-weight: normal;
      text-align: left;
    }

    dd {
      margin: 0;
      font-weight: 700;
      text-align: right;
    }

    address {
        font-style: normal;
    }
  }

